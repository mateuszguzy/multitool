version: "3.9"

services:
  multitool:
    build: .
    volumes:
      - type: bind
        source: ./logs
        target: /app/logs
    depends_on:
      - dvwa
      - redis
      - worker_main
      - worker_logging
    env_file:
      - .env
    command: python main.py
    stdin_open: true
    tty: true

  dvwa:
    image: vulnerables/web-dvwa:1.9

  worker_main:
    restart: unless-stopped
    build: .
    entrypoint: celery
    command: -A modules.task_queue.celery -b "redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}" --result-backend "redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}" worker -Q celery
    depends_on:
      - redis
    volumes:
      - type: bind
        source: ./logs
        target: /app/logs

  worker_logging:
    restart: unless-stopped
    build: .
    entrypoint: celery
    command: -A modules.task_queue.celery -b "redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}" --result-backend "redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}" worker -Q log_results
    depends_on:
      - redis
    volumes:
      - type: bind
        source: ./logs
        target: /app/logs

  flower:
    build: .
    image: mher/flower:2.0
    command: celery -A modules.task_queue.celery flower
    ports:
      - "${CELERY_FLOWER_EXPOSED_PORT}:${CELERY_FLOWER_PORT}"
    depends_on:
      - worker_main
      - worker_logging
      - redis

  redis:
    restart: unless-stopped
    image: redis:7.0.11
